{
	"name": "orig Customer Load Mike 20211003_01",
	"properties": {
		"activities": [
			{
				"name": "Import Excel xWalk - Erin",
				"description": "Using Excel xWalk from Erin . Stored in blob.  As updates are made will udate.",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Drop Tables",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "ExcelSource",
						"storeSettings": {
							"type": "AzureBlobStorageReadSettings",
							"recursive": true,
							"enablePartitionDiscovery": false
						}
					},
					"sink": {
						"type": "SqlDWSink",
						"tableOption": "autoCreate",
						"disableMetricsCollection": false
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "CustomerCrosswalknew",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "SynapseDedicatedPool2",
						"type": "DatasetReference",
						"parameters": {
							"cw_schema": "current_cmn",
							"cw_table": "CustomerCrossWalk_a"
						}
					}
				]
			},
			{
				"name": "Export Customer Parent",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Import Dynamics Account",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlDWSource",
						"sqlReaderQuery": "\nSelect  z.account_name as Name,\n'Customer' as Type,\nx.Billing_Street as BillingStreet, Billing_City as BillingCity, Billing_State_Province as BillingState, Billing_Zip_Postal_Code as BillingPostalCode, \nShipping_Street as ShippingStreet, Shipping_City as ShippingCity, Shipping_State_Province as ShippingState, Shipping_Zip_Postal_Code as ShippingPostalCode,\nz.fishbowl_id as Fishbowl_id__c,\nz.account_id as TidesSourceID__c,\nz.quickbooks_id as QuickBooks_ID__c,\n\nz.quickbooks_id as Quickbooks_Customer_External_ID__c,\nz.DynamicsID as DynamicsID__c,\n'Using Erin SF ID for joining ParentID in TidesSourceID__c' as TidesConversionNotes__c,\n'Erin xWalk ' as TidesSourceTable__c,\n\nz.parentid as ParentID,\n--==================================================\nCASE \nWHEN ctype.[infoformatted]='Physician Office - Rebate' THEN 'Physician Office'\nWHEN ctype.[infoformatted]='Physician Office' THEN 'Physician Office'\nWHEN ctype.[infoformatted]='Third Party Seller' THEN 'Distributor'\nWHEN ctype.[infoformatted]='Other' THEN 'Clinical Study Site'\nWHEN ctype.[infoformatted]='Inactive' THEN 'Hospital'\nWHEN ctype.[infoformatted]='Facility' THEN 'Hospital'\nWHEN ctype.[infoformatted]='Government' THEN 'Veterans Affairs'\nWHEN ctype.[infoformatted]='Nurse Practitioner-Nursing Home' THEN 'Mobile Wound Care - Nursing Facility'\nELSE 'Physician Office'\nEND as Primary_Customer_Type__c,\n\nCASE \nWHEN ptype.[infoformatted]='Dermatology with Mohs Surgery' THEN 'Dermatology'\nWHEN ptype.[infoformatted]='Family Medicine/General Practice' THEN 'Family Practice'\nWHEN ptype.[infoformatted]='Ocular' THEN 'Ophthalmology'\nWHEN ptype.[infoformatted]='HITIDE' THEN 'Wound Care Clinic'\nWHEN ptype.[infoformatted]='Nurse Practitioner/Nursing Home Rebate' THEN 'Wound Care Clinic'\nELSE NULL\nEND as Primary_Specialty__c,\n\nconvert (bit, CASE \nWHEN ctype.[infoformatted]='Physician Office - Rebate' THEN 1\nELSE 0\nEND) as Rebate__c,\n\ncase when len(dyn.[arb_npi]) <> 10 then null else dyn.[arb_npi] end as NPI__c,\n\n\ncase when len(dyn.[arb_taxid]) = 9 then left(arb_taxid,2) + '-' + right(arb_taxId,7) else null end as Tax_ID__c\n\n\n,pb.PBID as [Price_Book__c],\ndyn.fax as fax,\ndyn.telephone1 as phone,\nreg.region as region__c,\nreg.[Sub-Region] as Subregion__c\n\n\n\n\n\nfrom \n\n(\n\n  SELECT c.[Account_ID] \n      ,c.[Account_Name]\n      ,c.[QuickBooks_ID]\n      ,c.[Fishbowl_ID]\n      ,c.[DynamicsID]\n       ,Shipping_State_Province_Code  \n      ,null parentid \n        \n  FROM current_cmn.CustomerCrossWalk c\n\n  where parent_account_id is null\n  \n  \n\n\n  -----===============================================================================\n) z\n\n\nleft join\n\ncurrent_cmn.CustomerCrossWalk x\n\non z.account_ID = x.account_id\n\n\n\nleft join\n\n[current_fb].[customfieldview] ctype  -- primary customer type  Primary_Customer_Type__c\n\non\n\nz.fishbowl_id = ctype.recordid and ctype.cfid = '17'\n\nleft join\n\n[current_fb].[customfieldview] ptype -- primary Speciality  Primary_Specialty__c\n\non \n\nz.fishbowl_id = ptype.recordid and ptype.cfid = '40'\n\n\nleft join\n\ncurrent_dyn.Account dyn\n\non z.DynamicsID = dyn.id\n\nleft join\n\n\n(select pb.id as PBID, pg.fbid From [convert_sf].[pricebook] pb\n\nleft join [current_fb].[customertopricegroup] pg\n\non pb.fbpricegroupid = pg.agid) pb\n\non z.fishbowl_id = pb.fbid\n\n\nleft join\n\n[current_cmn].[Customer_Region_Sub] reg\n\non \n\nz.Shipping_State_Province_Code = reg.[state abv]\n\n\n\n\n\n\n\n\n\n\n------------ ==== where ===== -----\n\nwhere z.parentid is null \n\n\n\n",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"sink": {
						"type": "SalesforceServiceCloudSink",
						"writeBatchSize": 5000,
						"writeBehavior": "insert"
					},
					"enableStaging": false,
					"logSettings": {
						"enableCopyActivityLog": true,
						"copyActivityLogSettings": {
							"logLevel": "Warning",
							"enableReliableLogging": false
						},
						"logLocationSettings": {
							"linkedServiceName": {
								"referenceName": "AzureBlobStorage1",
								"type": "LinkedServiceReference"
							},
							"path": "tidesdevstoragefile01/Customer"
						}
					},
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "SynapseDedicatedPool2",
						"type": "DatasetReference",
						"parameters": {
							"cw_schema": "current_cmn",
							"cw_table": "CustomerCrossWalk"
						}
					}
				],
				"outputs": [
					{
						"referenceName": "SalesforceServiceCloud1",
						"type": "DatasetReference",
						"parameters": {
							"cw_objectApiName": "Account"
						}
					}
				]
			},
			{
				"name": "Import Parent Accounts",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Export Customer Parent",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SalesforceServiceCloudSource",
						"query": "select * from account\nwhere type = 'Customer' and name != 'Five Stars Agency' and name != 'TEST LGMC Dermatology' and name != 'test Best Agency' and name != 'TEST Acadiana Podiatry - Lafayette' and name != 'TEST Lily Agency'",
						"readBehavior": "query"
					},
					"sink": {
						"type": "SqlDWSink",
						"tableOption": "autoCreate",
						"disableMetricsCollection": false
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "SalesforceServiceCloud1",
						"type": "DatasetReference",
						"parameters": {
							"cw_objectApiName": "account"
						}
					}
				],
				"outputs": [
					{
						"referenceName": "SynapseDedicatedPool2",
						"type": "DatasetReference",
						"parameters": {
							"cw_schema": "convert_sf",
							"cw_table": "Account_parent"
						}
					}
				]
			},
			{
				"name": "Export Account Children",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Import Parent Accounts",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlDWSource",
						"sqlReaderQuery": "\nSelect  z.account_name as Name,\n'Customer' as Type,\nx.Billing_Street as BillingStreet, Billing_City as BillingCity, Billing_State_Province as BillingState, Billing_Zip_Postal_Code as BillingPostalCode, \nShipping_Street as ShippingStreet, Shipping_City as ShippingCity, Shipping_State_Province as ShippingState, Shipping_Zip_Postal_Code as ShippingPostalCode,\nz.fishbowl_id as Fishbowl_id__c,\nz.quickbooks_id as QuickBooks_ID__c,\n\nz.quickbooks_id as Quickbooks_Customer_External_ID__c,\nz.DynamicsID as DynamicsID__c,\nz.account_id as TidesSourceID__c,\n'Using Erin SF ID for joining ParentID in TidesSourceID__c' as TidesConversionNotes__c,\n'Erin xWalk ' as TidesSourceTable__c,\n\nz.parentid as ParentID,\n--==================================================\nCASE \nWHEN ctype.[infoformatted]='Physician Office - Rebate' THEN 'Physician Office'\nWHEN ctype.[infoformatted]='Physician Office' THEN 'Physician Office'\nWHEN ctype.[infoformatted]='Third Party Seller' THEN 'Distributor'\nWHEN ctype.[infoformatted]='Other' THEN 'Clinical Study Site'\nWHEN ctype.[infoformatted]='Inactive' THEN 'Hospital'\nWHEN ctype.[infoformatted]='Facility' THEN 'Hospital'\nWHEN ctype.[infoformatted]='Government' THEN 'Veterans Affairs'\nWHEN ctype.[infoformatted]='Nurse Practitioner-Nursing Home' THEN 'Mobile Wound Care - Nursing Facility'\nELSE 'Physician Office'\nEND as Primary_Customer_Type__c,\n\nCASE \nWHEN ptype.[infoformatted]='Dermatology with Mohs Surgery' THEN 'Dermatology'\nWHEN ptype.[infoformatted]='Family Medicine/General Practice' THEN 'Family Practice'\nWHEN ptype.[infoformatted]='Ocular' THEN 'Ophthalmology'\nWHEN ptype.[infoformatted]='HITIDE' THEN 'Wound Care Clinic'\nWHEN ptype.[infoformatted]='Nurse Practitioner/Nursing Home Rebate' THEN 'Wound Care Clinic'\nELSE NULL\nEND as Primary_Specialty__c,\n\nconvert (bit, CASE \nWHEN ctype.[infoformatted]='Physician Office - Rebate' THEN 1\nELSE 0\nEND) as Rebate__c,\n\ncase when len(dyn.[arb_npi]) <> 10 then null else dyn.[arb_npi] end as NPI__c,\n\n\ncase when len(dyn.[arb_taxid]) = 9 then left(arb_taxid,2) + '-' + right(arb_taxId,7) else null end as Tax_ID__c\n\n\n,pb.PBID as [Price_Book__c],\ndyn.fax as fax,\ndyn.telephone1 as phone,\nreg.region as region__c,\nreg.[Sub-Region] as Subregion__c\n\n\nfrom \n\n(\n\n  SELECT c.[Account_ID] \n      ,c.[Account_Name]\n      ,c.[QuickBooks_ID]\n      ,c.[Fishbowl_ID]\n      ,c.[DynamicsID]\n         \n      ,x2.account_id as parentid\n\t \n  FROM current_cmn.CustomerCrossWalk c\n\n  left join \n\n  current_cmn.CustomerCrossWalk x2\n\n  on c.parent_account_id = x2.account_id\n\n  where c.parent_account_id is not null\n  \n  --left join\n\n  --convert_sf.account_parent par\n\n  --on \n\n  --(case when x2.account_id is not null then x2.quickbooks_id else null end) = par.QuickBooks_ID__c\n    -----===============================================================================\n) z\n\n--/////////////////////////////////////////////////////////////////////////////////////////////////////////////\n--\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\nleft join\n\ncurrent_cmn.CustomerCrossWalk x\n\non z.account_ID = x.account_id\n\n\n\nleft join\n\n[current_fb].[customfieldview] ctype  -- primary customer type  Primary_Customer_Type__c\n\non\n\nz.fishbowl_id = ctype.recordid and ctype.cfid = '17'\n\nleft join\n\n[current_fb].[customfieldview] ptype -- primary Speciality  Primary_Specialty__c\n\non \n\nz.fishbowl_id = ptype.recordid and ptype.cfid = '40'\n\n\nleft join\n\ncurrent_dyn.Account dyn\n\non z.DynamicsID = dyn.id\n\nleft join\n\n\n(select pb.id as PBID, pg.fbid From [convert_sf].[pricebook] pb\n\nleft join [current_fb].[customertopricegroup] pg\n\non pb.fbpricegroupid = pg.agid) pb\n\non z.fishbowl_id = pb.fbid\n\n\nleft join\n\n[current_cmn].[Customer_Region_Sub] reg\n\non \n\nx.Shipping_State_Province_Code = reg.[state abv]\n\n\n",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"sink": {
						"type": "SalesforceServiceCloudSink",
						"writeBatchSize": 5000,
						"writeBehavior": "insert"
					},
					"enableStaging": false,
					"logSettings": {
						"enableCopyActivityLog": true,
						"copyActivityLogSettings": {
							"logLevel": "Warning",
							"enableReliableLogging": false
						},
						"logLocationSettings": {
							"linkedServiceName": {
								"referenceName": "AzureBlobStorage1",
								"type": "LinkedServiceReference"
							},
							"path": "tidesdevstoragefile01/Customer"
						}
					},
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "SynapseDedicatedPool2",
						"type": "DatasetReference",
						"parameters": {
							"cw_schema": "current_cmn",
							"cw_table": "CustomerCrossWalk"
						}
					}
				],
				"outputs": [
					{
						"referenceName": "SalesforceServiceCloud1",
						"type": "DatasetReference",
						"parameters": {
							"cw_objectApiName": "account"
						}
					}
				]
			},
			{
				"name": "Import All Accounts",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Export Account Children",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SalesforceServiceCloudSource",
						"query": "select * from account\nwhere type = 'Customer' and name != 'Five Stars Agency' and name != 'TEST LGMC Dermatology' and name != 'test Best Agency' and name != 'TEST Acadiana Podiatry - Lafayette' and name != 'TEST Lily Agency'",
						"readBehavior": "query"
					},
					"sink": {
						"type": "SqlDWSink",
						"tableOption": "autoCreate",
						"disableMetricsCollection": false
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "SalesforceServiceCloud1",
						"type": "DatasetReference",
						"parameters": {
							"cw_objectApiName": "Account"
						}
					}
				],
				"outputs": [
					{
						"referenceName": "SynapseDedicatedPool2",
						"type": "DatasetReference",
						"parameters": {
							"cw_schema": "current_sf",
							"cw_table": "Account_all"
						}
					}
				]
			},
			{
				"name": "Import FB Custom Field View",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Import_Customer_Region_Sub_xWalk",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [
					{
						"name": "Source",
						"value": "@{'`address`'}"
					},
					{
						"name": "Destination",
						"value": "@{'current_fb'}.@{'address'}"
					}
				],
				"typeProperties": {
					"source": {
						"type": "MySqlSource"
					},
					"sink": {
						"type": "SqlDWSink",
						"preCopyScript": "truncate table current_fb.customfieldview",
						"tableOption": "autoCreate",
						"disableMetricsCollection": false
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "FishbowlDb1",
						"type": "DatasetReference",
						"parameters": {
							"cw_tableName": "`customfieldview`"
						}
					}
				],
				"outputs": [
					{
						"referenceName": "SynapseDedicatedPool2",
						"type": "DatasetReference",
						"parameters": {
							"cw_schema": "current_fb",
							"cw_table": "customfieldview"
						}
					}
				]
			},
			{
				"name": "Drop Tables",
				"description": "set @DropTables to 123 and all tables will drop\n\nset to 0 and only the SF Tables Will Drop",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[SF_Convert].[Customer_01_DropTables]",
					"storedProcedureParameters": {
						"DropTables": {
							"value": "123",
							"type": "Int32"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "SynapseDedicatedPool",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Import Dynamics Account",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Import FB Custom Field View",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlDWSource",
						"sqlReaderQuery": "select * from stage_ce.account a\n\njoin\n\n(\nselect distinct customerid as acctid from reporting.[case]\nunion \nselect id from [stage_ce].[account] as acctid where statuscode = 1) z\n\non a.id = z.acctid\n",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"sink": {
						"type": "SqlDWSink",
						"tableOption": "autoCreate",
						"disableMetricsCollection": false
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "SynapseOnDemandPool_Arbela",
						"type": "DatasetReference",
						"parameters": {
							"cw_schema": "stage_ce",
							"cw_table": "Account"
						}
					}
				],
				"outputs": [
					{
						"referenceName": "SynapseDedicatedPool2",
						"type": "DatasetReference",
						"parameters": {
							"cw_schema": "current_dyn",
							"cw_table": "account"
						}
					}
				]
			},
			{
				"name": "Import_Customer_Region_Sub_xWalk",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Create Customer CrossWalk",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "ExcelSource",
						"storeSettings": {
							"type": "AzureBlobStorageReadSettings",
							"recursive": true,
							"enablePartitionDiscovery": false
						}
					},
					"sink": {
						"type": "SqlDWSink",
						"tableOption": "autoCreate",
						"disableMetricsCollection": false
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "xwalkstateregionsub",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "SynapseDedicatedPool2",
						"type": "DatasetReference",
						"parameters": {
							"cw_schema": "current_cmn",
							"cw_table": "Customer_Region_Sub"
						}
					}
				]
			},
			{
				"name": "Create Customer CrossWalk",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Import Excel xWalk - Erin",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlDWSource",
						"sqlReaderQuery": "\n\nselect x.*, x2.Account_Name as ParentName, x2.quickbooks_id as [Parent QBID], x2.fishbowl_id as [Parent FBID], x2.dynamicsid as [Parent DYNID]\n\n\n\nfrom [current_cmn].[CustomerCrossWalk_a]  x\n\nleft join\n\n\n[current_cmn].[CustomerCrossWalk_a] x2\n\non x.parent_account_id = x2.account_id\n",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"sink": {
						"type": "SqlDWSink",
						"tableOption": "autoCreate",
						"disableMetricsCollection": false
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "SynapseDedicatedPool2",
						"type": "DatasetReference",
						"parameters": {
							"cw_schema": "current_cmn",
							"cw_table": "CustomerCrossWalk"
						}
					}
				],
				"outputs": [
					{
						"referenceName": "SynapseDedicatedPool2",
						"type": "DatasetReference",
						"parameters": {
							"cw_schema": "current_cmn",
							"cw_table": "CustomerCrossWalk"
						}
					}
				]
			},
			{
				"name": "Attach sales agency to customer",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "attach customers to agencies",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlDWSource",
						"sqlReaderQuery": "Select id, Sales_Agency__c \nfrom convert_sf.account",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"sink": {
						"type": "SalesforceServiceCloudSink",
						"writeBatchSize": 5000,
						"writeBehavior": "upsert",
						"externalIdFieldName": "id",
						"ignoreNullValues": false
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "SynapseDedicatedPool2",
						"type": "DatasetReference",
						"parameters": {
							"cw_schema": "convert_sf",
							"cw_table": "account"
						}
					}
				],
				"outputs": [
					{
						"referenceName": "SalesforceServiceCloud1",
						"type": "DatasetReference",
						"parameters": {
							"cw_objectApiName": "account"
						}
					}
				]
			},
			{
				"name": "Import All Accounts with agencies",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Attach sales agency to customer",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SalesforceServiceCloudSource",
						"query": "select * from account\nwhere type = 'Customer' and name != 'Five Stars Agency' and name != 'TEST LGMC Dermatology' and name != 'Best Agency' and name != 'TEST Acadiana Podiatry - Lafayette'",
						"readBehavior": "query"
					},
					"sink": {
						"type": "SqlDWSink",
						"tableOption": "autoCreate",
						"disableMetricsCollection": false
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "SalesforceServiceCloud1",
						"type": "DatasetReference",
						"parameters": {
							"cw_objectApiName": "Account"
						}
					}
				],
				"outputs": [
					{
						"referenceName": "SynapseDedicatedPool2",
						"type": "DatasetReference",
						"parameters": {
							"cw_schema": "current_sf",
							"cw_table": "Account_all"
						}
					}
				]
			},
			{
				"name": "Attach sales agents to customers",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Import All Accounts with agencies",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlDWSource",
						"sqlReaderQuery": "Select a.id, reps.id as Primary_Sales_Agent__c\n\n\nfrom current_sf.account_all a\nleft join [current_sf].[SalesAgencyAccounts] s on a.Sales_Agency__c  = s.id\njoin [current_roster].[SalesAgency] sagency on s.[name] = sagency.[Masterlist_agencyName] \nleft join [current_sf].[SalesReps] reps on sagency.[Full Name] = reps.[name] \nwhere reps.title2__c != 'RVP' and reps.title2__c != 'Rsd' and  reps.title2__c != 'frm'",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"sink": {
						"type": "SalesforceServiceCloudSink",
						"writeBatchSize": 5000,
						"writeBehavior": "upsert",
						"externalIdFieldName": "id",
						"ignoreNullValues": false
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "SynapseDedicatedPool2",
						"type": "DatasetReference",
						"parameters": {
							"cw_schema": "current_sf",
							"cw_table": "account_all "
						}
					}
				],
				"outputs": [
					{
						"referenceName": "SalesforceServiceCloud1",
						"type": "DatasetReference",
						"parameters": {
							"cw_objectApiName": "account"
						}
					}
				]
			},
			{
				"name": "Import All Accounts with agents",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Attach sales agents to customers",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SalesforceServiceCloudSource",
						"query": "select * from account\nwhere type = 'Customer' and name != 'Five Stars Agency' and name != 'TEST LGMC Dermatology' and name != 'Best Agency' and name != 'TEST Acadiana Podiatry - Lafayette'",
						"readBehavior": "query"
					},
					"sink": {
						"type": "SqlDWSink",
						"preCopyScript": "truncate table current_sf.Account_all",
						"tableOption": "autoCreate",
						"disableMetricsCollection": false
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "SalesforceServiceCloud1",
						"type": "DatasetReference",
						"parameters": {
							"cw_objectApiName": "Account"
						}
					}
				],
				"outputs": [
					{
						"referenceName": "SynapseDedicatedPool2",
						"type": "DatasetReference",
						"parameters": {
							"cw_schema": "current_sf",
							"cw_table": "Account_all"
						}
					}
				]
			},
			{
				"name": "attach customers to agencies",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Import All Accounts",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[SF_Convert].[Customer_02_Crosswalk]"
				},
				"linkedServiceName": {
					"referenceName": "SynapseDedicatedPool",
					"type": "LinkedServiceReference"
				}
			}
		],
		"folder": {
			"name": "zzz_GoLivePipelines/Customer"
		},
		"annotations": [],
		"lastPublishTime": "2021-10-19T12:54:35Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}