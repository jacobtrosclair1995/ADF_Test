{
	"name": "Dont USE in PRODUTION 10 - Development - dont_use_prod_Import AR Alert Information",
	"properties": {
		"activities": [
			{
				"name": "Export AR Alert to SF",
				"description": "Get AR Alerts from SF Production (lookup)\nExport to Dev SF",
				"type": "Copy",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlDWSource",
						"sqlReaderQuery": "SELECT\n\n\n      [Name]\n\n      ,[Amount__c]\n      ,[Approver__c]\n      ,[Tier__c]\n  FROM [current_sf].[AR_Alerts_From_Production]\n",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"sink": {
						"type": "SalesforceServiceCloudSink",
						"writeBatchSize": 5000,
						"writeBehavior": "insert"
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "SynapseDedicatedPool2",
						"type": "DatasetReference",
						"parameters": {
							"cw_schema": "current_sf",
							"cw_table": "AR_Alerts_From_Production"
						}
					}
				],
				"outputs": [
					{
						"referenceName": "SalesforceServiceCloud1",
						"type": "DatasetReference",
						"parameters": {
							"cw_objectApiName": "AR_alerts__c"
						}
					}
				]
			},
			{
				"name": "Import AR Alerts from SF",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Export AR Alert to SF",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SalesforceServiceCloudSource",
						"readBehavior": "query"
					},
					"sink": {
						"type": "SqlDWSink",
						"preCopyScript": "\t\tIF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[current_sf].AR_alerts__c') AND type in (N'U'))\n\t\tDROP TABLE [current_sf].AR_alerts__c",
						"tableOption": "autoCreate",
						"disableMetricsCollection": false
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "SalesforceServiceCloud1",
						"type": "DatasetReference",
						"parameters": {
							"cw_objectApiName": "AR_alerts__c"
						}
					}
				],
				"outputs": [
					{
						"referenceName": "SynapseDedicatedPool2",
						"type": "DatasetReference",
						"parameters": {
							"cw_schema": "current_sf",
							"cw_table": "AR_alerts__c"
						}
					}
				]
			},
			{
				"name": "Upsert AR Alert to SF Account",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Import AR Alerts from SF",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlDWSource",
						"sqlReaderQuery": "\nSELECT \n\t\ta.id\n\t\t--,fa.[creditlimit]\n\t  , alert.id as [AR_Alert_Level__c]\n\t  ,case when fa.creditlimit >= 250000 then fa.creditlimit else null end as [Top_Tier_Amount__c]\n\t  --,alert.name\n  FROM [current_fb].[Customer] fa\n\n  join\n\n  current_sf.account_all a\n\n  on fa.id = a.[Fishbowl_ID__c]\n\n  join\n\n\n   [current_sf].[AR_alerts__c] alert\n\n   on \n\n   (case\n\t--when (fa.creditlimit >= 0 and fa.creditlimit <= 20000)   then 20000  - removed \n\t\t when fa.creditlimit >= 0 and fa.creditlimit <= 40000 then 40000\n\t\t when fa.creditlimit > 40000 and fa.creditlimit <= 60000 then 60000\n\t\t when fa.creditlimit > 60000 and fa.creditlimit <= 100000 then 100000\n\t\t when fa.creditlimit > 100000 and fa.creditlimit <= 200000 then 200000\n\t\t when fa.creditlimit > 200000 and fa.creditlimit <= 250000 then 250000\n\t\t when fa.creditlimit > 250000 then 250000\n\t\t else 0\n\n   \n   \n   end) \n   \n   \n   \n   = alert.amount__c",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"sink": {
						"type": "SalesforceServiceCloudSink",
						"writeBatchSize": 5000,
						"writeBehavior": "upsert",
						"externalIdFieldName": "id",
						"ignoreNullValues": false
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "SynapseDedicatedPool2",
						"type": "DatasetReference",
						"parameters": {
							"cw_schema": "current_qb",
							"cw_table": "customer"
						}
					}
				],
				"outputs": [
					{
						"referenceName": "SalesforceServiceCloud1",
						"type": "DatasetReference",
						"parameters": {
							"cw_objectApiName": "account"
						}
					}
				]
			}
		],
		"folder": {
			"name": "zzz_GoLivePipelines/z_PostDataLoad_updates"
		},
		"annotations": [],
		"lastPublishTime": "2021-10-19T12:54:35Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}