{
	"name": "Customer",
	"properties": {
		"activities": [
			{
				"name": "Import Excel xWalk - Erin",
				"description": "Using Excel xWalk from Erin . Stored in blob.  As updates are made will udate.",
				"type": "Copy",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "ExcelSource",
						"storeSettings": {
							"type": "AzureBlobStorageReadSettings",
							"recursive": true,
							"enablePartitionDiscovery": false
						}
					},
					"sink": {
						"type": "SqlDWSink",
						"preCopyScript": "IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[current_cmn].[CustomerCrossWalk_a]') AND type in (N'U'))\nDROP TABLE [current_cmn].[CustomerCrossWalk_a]\n",
						"tableOption": "autoCreate",
						"disableMetricsCollection": false
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "CustomerCrosswalknew",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "SynapseDedicatedPool2",
						"type": "DatasetReference",
						"parameters": {
							"cw_schema": "current_cmn",
							"cw_table": "CustomerCrossWalk_a"
						}
					}
				]
			},
			{
				"name": "Import All Accounts",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Export All Customers",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SalesforceServiceCloudSource",
						"query": "select * from account\nwhere type = 'Customer' and name != 'Five Stars Agency' and name != 'TEST LGMC Dermatology' and name != 'test Best Agency' and name != 'TEST Acadiana Podiatry - Lafayette' and name != 'TEST Lily Agency'",
						"readBehavior": "query"
					},
					"sink": {
						"type": "SqlDWSink",
						"preCopyScript": "IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[current_sf].[Account_all]') AND type in (N'U'))\nDROP TABLE [current_sf].[Account_all]\n",
						"tableOption": "autoCreate",
						"disableMetricsCollection": false
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "SalesforceServiceCloud1",
						"type": "DatasetReference",
						"parameters": {
							"cw_objectApiName": "Account"
						}
					}
				],
				"outputs": [
					{
						"referenceName": "SynapseDedicatedPool2",
						"type": "DatasetReference",
						"parameters": {
							"cw_schema": "current_sf",
							"cw_table": "Account_all"
						}
					}
				]
			},
			{
				"name": "Import Dynamics Account",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Import_Customer_Region_Sub_xWalk",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlDWSource",
						"sqlReaderQuery": "select * from stage_ce.account a\n\njoin\n\n(\nselect distinct customerid as acctid from reporting.[case]\nunion \nselect id from [stage_ce].[account] as acctid where statuscode = 1) z\n\non a.id = z.acctid\n",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"sink": {
						"type": "SqlDWSink",
						"preCopyScript": "IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[current_dyn].[account]') AND type in (N'U'))\nDROP TABLE [current_dyn].[account]\n",
						"tableOption": "autoCreate",
						"disableMetricsCollection": false
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "SynapseOnDemandPool_Arbela",
						"type": "DatasetReference",
						"parameters": {
							"cw_schema": "stage_ce",
							"cw_table": "Account"
						}
					}
				],
				"outputs": [
					{
						"referenceName": "SynapseDedicatedPool2",
						"type": "DatasetReference",
						"parameters": {
							"cw_schema": "current_dyn",
							"cw_table": "account"
						}
					}
				]
			},
			{
				"name": "Import_Customer_Region_Sub_xWalk",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Create Customer CrossWalk",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "ExcelSource",
						"storeSettings": {
							"type": "AzureBlobStorageReadSettings",
							"recursive": true,
							"enablePartitionDiscovery": false
						}
					},
					"sink": {
						"type": "SqlDWSink",
						"preCopyScript": "IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[current_cmn].[Customer_Region_Sub]') AND type in (N'U'))\nDROP TABLE [current_cmn].[Customer_Region_Sub]\n",
						"tableOption": "autoCreate",
						"disableMetricsCollection": false
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "xwalkstateregionsub",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "SynapseDedicatedPool2",
						"type": "DatasetReference",
						"parameters": {
							"cw_schema": "current_cmn",
							"cw_table": "Customer_Region_Sub"
						}
					}
				]
			},
			{
				"name": "Create Customer CrossWalk",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Import Excel xWalk - Erin",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlDWSource",
						"sqlReaderQuery": "\n\nselect x.*, x2.Account_Name as ParentName, x2.quickbooks_id as [Parent QBID], x2.fishbowl_id as [Parent FBID], x2.dynamicsid as [Parent DYNID]\n\n\n\nfrom [current_cmn].[CustomerCrossWalk_a]  x\n\nleft join\n\n\n[current_cmn].[CustomerCrossWalk_a] x2\n\non x.parent_account_id = x2.account_id\n",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"sink": {
						"type": "SqlDWSink",
						"preCopyScript": "IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[current_cmn].[CustomerCrossWalk]') AND type in (N'U'))\nDROP TABLE [current_cmn].[CustomerCrossWalk]\n",
						"tableOption": "autoCreate",
						"disableMetricsCollection": false
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "SynapseDedicatedPool2",
						"type": "DatasetReference",
						"parameters": {
							"cw_schema": "current_cmn",
							"cw_table": "CustomerCrossWalk"
						}
					}
				],
				"outputs": [
					{
						"referenceName": "SynapseDedicatedPool2",
						"type": "DatasetReference",
						"parameters": {
							"cw_schema": "current_cmn",
							"cw_table": "CustomerCrossWalk"
						}
					}
				]
			},
			{
				"name": "Export All Customers",
				"description": "will update later for parent/child",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Import Dynamics Account",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlDWSource",
						"sqlReaderQuery": "\nSelect  z.account_name as Name,\n'Customer' as Type,\nz.Billing_Street as BillingStreet, Billing_City as BillingCity, Billing_State_Province as BillingState, Billing_Zip_Postal_Code as BillingPostalCode, \nShipping_Street as ShippingStreet, Shipping_City as ShippingCity, Shipping_State_Province as ShippingState, Shipping_Zip_Postal_Code as ShippingPostalCode,\nz.fishbowl_id as Fishbowl_id__c,\nz.account_id as TidesSourceID__c,\nz.quickbooks_id as QuickBooks_ID__c,\n\nz.quickbooks_id as Quickbooks_Customer_External_ID__c,\nz.DynamicsID as DynamicsID__c,\n'Using Erin SF ID for joining ParentID in TidesSourceID__c' as TidesConversionNotes__c,\n'Erin xWalk ' as TidesSourceTable__c,\n\nnull as ParentID,\n--==================================================\n\ncase when len(dyn.[arb_npi]) <> 10 then null else dyn.[arb_npi] end as NPI__c,\n\n\ncase when len(dyn.[arb_taxid]) = 9 then left(arb_taxid,2) + '-' + right(arb_taxId,7) else null end as Tax_ID__c\n\n\n,pb.PBID as [Price_Book__c],\ndyn.fax as fax,\ndyn.telephone1 as phone,\nreg.region as region__c,\nreg.[Sub-Region] as Subregion__c\n\n        \n  FROM current_cmn.CustomerCrossWalk z\n\n\n\nleft join\n\ncurrent_dyn.Account dyn\n\non z.DynamicsID = dyn.id\n\nleft join\n\n\n(select pb.id as PBID, pg.fbid From [convert_sf].[pricebook] pb\n\nleft join [current_fb].[customertopricegroup] pg\n\non pb.fbpricegroupid = pg.agid) pb\n\non z.fishbowl_id = pb.fbid\n\n\nleft join\n\n[current_cmn].[Customer_Region_Sub] reg\n\non \n\nz.Shipping_State_Province_Code = reg.[state abv]\n\n\n",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"sink": {
						"type": "SalesforceServiceCloudSink",
						"writeBatchSize": 5000,
						"writeBehavior": "insert"
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "SynapseDedicatedPool2",
						"type": "DatasetReference",
						"parameters": {
							"cw_schema": "current_cmn",
							"cw_table": "customercrosswalk"
						}
					}
				],
				"outputs": [
					{
						"referenceName": "SalesforceServiceCloud1",
						"type": "DatasetReference",
						"parameters": {
							"cw_objectApiName": "account"
						}
					}
				]
			}
		],
		"folder": {
			"name": "zzz_GoLivePipelines/Customer"
		},
		"annotations": [],
		"lastPublishTime": "2021-10-19T12:54:35Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}