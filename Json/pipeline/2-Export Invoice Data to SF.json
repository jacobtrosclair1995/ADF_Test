{
	"name": "2-Export Invoice Data to SF",
	"properties": {
		"activities": [
			{
				"name": "Export Invoice Header to SF",
				"description": "Send Invoice Header to SF ",
				"type": "Copy",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlDWSource",
						"sqlReaderQuery": "select\ni.[ID] as QB_Invoice_ID__c\n      ,i.id as Alt_Invoice_Name__c\n      \n\t  ,x.id as customer__c\n    ,convert(datetime, i.[Date]\n    AT TIME ZONE 'Central Standard Time' \n    AT TIME ZONE 'UTC' ) as Invoice_Date__c\n\t\n      , x.id as Billing_Company__c\n      ,i.referencenumber as  Ref_Number__c\n\t  ,i.billingaddress as Billing_Street__c\n      ,i.[BillingCity] as Billing_City__c\n      ,i.[BillingState] as Billing_State__c\n      ,i.[BillingPostalCode] as Billing_Postal_Code__c\n      ,i.[BillingCountry] as Billing_Country__c\n      ,i.[POnumber] as Customer_PO__c\n\n\t   ,convert(datetime, i.[DueDate]\n       AT TIME ZONE 'UTC' \n       AT TIME ZONE 'Central Standard Time') as Due_Date__c\n       ,i.[Terms] as Terms__c\n\t   ,'current_qb.invocies' as [TidesSourceTable__c]\n      ,'Source ID is the QB Invoice Number' as [TidesConversionNotes__c]\n\t  ,i.id as [TidesSourceID__c]\n\t\n      ,trim(i.[ShippingLine1]) + ' - ' + trim(i.[ShippingLine2]) + ' - ' + trim(i.[ShippingLine3]) + ' - ' + trim(i.[ShippingLine4]) + ' - ' + trim(i.[ShippingLine5]) as [Delivery_Street__c]\n     \n      ,i.[ShippingCity] as [Delivery_City__c]\n      ,i.[ShippingState] as [Delivery_State__c]\n      ,i.[ShippingPostalCode] as [Delivery_Postal_Code__c]\n      ,i.[ShippingCountry] as [Delivery_Country__c]\n      \n\t \n\t  ,a.region as [Region__c]\n \n\t\n\t  ,a.[sub-region] as [Subregion__c]\n\t  --,crs.frm_sfid as [FRM__c]\n\t \n\t  --,case when i.[Balance] = 0 then 'Checked' else 'Unchecked' end as [paind__c]\n\t\t--,cast(1 as bit) as [Locked__c]\n\t  --,cast(1 as bit) [Order_Status__c]\n\n\t  --,left(i.[ShippingAddress],300) as [Delivery_Attention_Line__c]\n\n\n\t  /* items that may need to be addressed / more research\n\n\t\t\t\t--   ,crs.rsd_SFID as [RSD__c]\n\t\t\t\t--   ,crs.rvp_SFID as [RVP__c]\n\t\t\t\t--,crs.mac as Mac__c\n\n\n\t  */\n\n       FROM [current_qb].[invoices] i\n\n\n join [current_sf].[account_all] x\n\n  on \n\n(case\nwhen i.customerid = '800000D3-1401487158'  \t\tthen '800001EC-1468619846'\nwhen i.customerid = '8000016A-1437496742'     \tthen '80000253-1496780871'\nwhen i.customerid = '800001B7-1455159723'      \tthen '8000019C-1448422929'\nwhen i.customerid = '80000319-1525707283'     \tthen '800002F4-1522980784'\nwhen i.customerid = '800003A9-1540241558'     \tthen '80000506-1568654983'\nwhen i.customerid = '80000400-1550204666'     \tthen '8000056E-1575666746'\nwhen i.customerid = '80000481-1560518732'     \tthen '80000952-1632854561'\nwhen i.customerid = '8000054C-1573152649'     \tthen '800007AA-1616990426'\n\nelse i.customerid end)  = x.Quickbooks_Customer_External_ID__c\n\n\n\n\n  left join\n\n     [current_cmn].[Customer_Region_Sub] a\n\n\ton\n \n i.shippingstate = a.[State Abv]\n\n",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"sink": {
						"type": "SalesforceServiceCloudSink",
						"writeBatchSize": 5000,
						"writeBehavior": "insert"
					},
					"enableStaging": false,
					"logSettings": {
						"enableCopyActivityLog": true,
						"copyActivityLogSettings": {
							"logLevel": "Warning",
							"enableReliableLogging": false
						},
						"logLocationSettings": {
							"linkedServiceName": {
								"referenceName": "AzureBlobStorage1",
								"type": "LinkedServiceReference"
							},
							"path": "tidesdevstoragefile01/FInance/Invoices"
						}
					},
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "SynapseDedicatedPool2",
						"type": "DatasetReference",
						"parameters": {
							"cw_schema": "current_qb",
							"cw_table": "invoices"
						}
					}
				],
				"outputs": [
					{
						"referenceName": "SalesforceServiceCloud1",
						"type": "DatasetReference",
						"parameters": {
							"cw_objectApiName": "invoice__c"
						}
					}
				]
			},
			{
				"name": "Import SF Invoice Header",
				"description": "Include the SF Invoice ID",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Export Invoice Header to SF",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SalesforceServiceCloudSource",
						"readBehavior": "query"
					},
					"sink": {
						"type": "SqlDWSink",
						"preCopyScript": "IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[current_sf].[invoices]') AND type in (N'U'))\nDROP TABLE [current_sf].[invoices]",
						"tableOption": "autoCreate",
						"disableMetricsCollection": false
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "SalesforceServiceCloud1",
						"type": "DatasetReference",
						"parameters": {
							"cw_objectApiName": "invoice__c"
						}
					}
				],
				"outputs": [
					{
						"referenceName": "SynapseDedicatedPool2",
						"type": "DatasetReference",
						"parameters": {
							"cw_schema": "current_sf",
							"cw_table": "invoices"
						}
					}
				]
			},
			{
				"name": "Export Invoice Lines to SF",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Import SF Invoice Header",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlDWSource",
						"sqlReaderQuery": "select si.id as invoice__c, items.sfprodid as product__c,  isnull(il.itemquantity,1) as  quantity__c, itemrate as unit_price__c, left(il.itemdescription,250) as Description__c\n, il.id as [TidesSourceID__c]\n, ' [current_qb].[invoicelineitems]' as [TidesSourceTable__c]\n   \n, 'Tides SourceID__c is the id of the invoicelineitems row' as [TidesConversionNotes__c]\n\nfrom [current_qb].[invoicelineitems] il\n\nleft join\n\ncurrent_qb.Invoice_vQB_Prod_FB_Prod items\n\non il.invoiceid = items.invoiceid and il.itemlinenumber = items.itemlinenumber\n\njoin \n\ncurrent_sf.invoices si\n\non \n\nil.invoiceid = si.QB_Invoice_ID__c\n",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"sink": {
						"type": "SalesforceServiceCloudSink",
						"writeBatchSize": 5000,
						"writeBehavior": "insert"
					},
					"enableStaging": false,
					"logSettings": {
						"enableCopyActivityLog": true,
						"copyActivityLogSettings": {
							"logLevel": "Warning",
							"enableReliableLogging": false
						},
						"logLocationSettings": {
							"linkedServiceName": {
								"referenceName": "AzureBlobStorage1",
								"type": "LinkedServiceReference"
							},
							"path": "tidesdevstoragefile01/FInance/Invoices"
						}
					},
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "SynapseDedicatedPool2",
						"type": "DatasetReference",
						"parameters": {
							"cw_schema": "current_qb",
							"cw_table": "invoicelineitems"
						}
					}
				],
				"outputs": [
					{
						"referenceName": "SalesforceServiceCloud1",
						"type": "DatasetReference",
						"parameters": {
							"cw_objectApiName": "invoice_line__c"
						}
					}
				]
			},
			{
				"name": "Import SF Invoice Lines",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Export Invoice Lines to SF",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SalesforceServiceCloudSource",
						"readBehavior": "query"
					},
					"sink": {
						"type": "SqlDWSink",
						"preCopyScript": "IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[current_sf].[InvoiceLines]') AND type in (N'U'))\nDROP TABLE [current_sf].[InvoiceLines]",
						"tableOption": "autoCreate",
						"disableMetricsCollection": false
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "SalesforceServiceCloud1",
						"type": "DatasetReference",
						"parameters": {
							"cw_objectApiName": "invoice_line__c"
						}
					}
				],
				"outputs": [
					{
						"referenceName": "SynapseDedicatedPool2",
						"type": "DatasetReference",
						"parameters": {
							"cw_schema": "current_sf",
							"cw_table": "InvoiceLines"
						}
					}
				]
			}
		],
		"folder": {
			"name": "zzz_GoLivePipelines/Finance"
		},
		"annotations": [],
		"lastPublishTime": "2021-11-04T21:53:20Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}